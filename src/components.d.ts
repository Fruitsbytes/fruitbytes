/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil/router";
import { Log } from "./interfaces/log";
import { BackDropOptions } from "./interfaces/options";
export namespace Components {
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface CharacterSelection {
    }
    interface ConsoleWelcome {
    }
    interface Gui404 {
    }
    interface GuiWelcome {
        "menuWidth": number;
    }
    interface LogoText {
    }
    interface ModalBackdrop {
    }
    interface PageNotFound {
    }
    interface RightPanel {
        "isOpened": boolean;
    }
    interface SimpleLink {
        "label": string;
        "link": string;
        "state": Object;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLCharacterSelectionElement extends Components.CharacterSelection, HTMLStencilElement {
    }
    var HTMLCharacterSelectionElement: {
        prototype: HTMLCharacterSelectionElement;
        new (): HTMLCharacterSelectionElement;
    };
    interface HTMLConsoleWelcomeElement extends Components.ConsoleWelcome, HTMLStencilElement {
    }
    var HTMLConsoleWelcomeElement: {
        prototype: HTMLConsoleWelcomeElement;
        new (): HTMLConsoleWelcomeElement;
    };
    interface HTMLGui404Element extends Components.Gui404, HTMLStencilElement {
    }
    var HTMLGui404Element: {
        prototype: HTMLGui404Element;
        new (): HTMLGui404Element;
    };
    interface HTMLGuiWelcomeElement extends Components.GuiWelcome, HTMLStencilElement {
    }
    var HTMLGuiWelcomeElement: {
        prototype: HTMLGuiWelcomeElement;
        new (): HTMLGuiWelcomeElement;
    };
    interface HTMLLogoTextElement extends Components.LogoText, HTMLStencilElement {
    }
    var HTMLLogoTextElement: {
        prototype: HTMLLogoTextElement;
        new (): HTMLLogoTextElement;
    };
    interface HTMLModalBackdropElement extends Components.ModalBackdrop, HTMLStencilElement {
    }
    var HTMLModalBackdropElement: {
        prototype: HTMLModalBackdropElement;
        new (): HTMLModalBackdropElement;
    };
    interface HTMLPageNotFoundElement extends Components.PageNotFound, HTMLStencilElement {
    }
    var HTMLPageNotFoundElement: {
        prototype: HTMLPageNotFoundElement;
        new (): HTMLPageNotFoundElement;
    };
    interface HTMLRightPanelElement extends Components.RightPanel, HTMLStencilElement {
    }
    var HTMLRightPanelElement: {
        prototype: HTMLRightPanelElement;
        new (): HTMLRightPanelElement;
    };
    interface HTMLSimpleLinkElement extends Components.SimpleLink, HTMLStencilElement {
    }
    var HTMLSimpleLinkElement: {
        prototype: HTMLSimpleLinkElement;
        new (): HTMLSimpleLinkElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "character-selection": HTMLCharacterSelectionElement;
        "console-welcome": HTMLConsoleWelcomeElement;
        "gui-404": HTMLGui404Element;
        "gui-welcome": HTMLGuiWelcomeElement;
        "logo-text": HTMLLogoTextElement;
        "modal-backdrop": HTMLModalBackdropElement;
        "page-not-found": HTMLPageNotFoundElement;
        "right-panel": HTMLRightPanelElement;
        "simple-link": HTMLSimpleLinkElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
        "onConsole.logged"?: (event: CustomEvent<Log>) => void;
        "onState.pushed"?: (event: CustomEvent<{ state: any; title: string; url?: string | URL | null; }>) => void;
    }
    interface CharacterSelection {
    }
    interface ConsoleWelcome {
    }
    interface Gui404 {
    }
    interface GuiWelcome {
        "menuWidth": number;
    }
    interface LogoText {
    }
    interface ModalBackdrop {
        "onConsole.logged"?: (event: CustomEvent<Log>) => void;
    }
    interface PageNotFound {
    }
    interface RightPanel {
        "isOpened"?: boolean;
        "onMenu.closed"?: (event: CustomEvent<Partial<BackDropOptions> | undefined>) => void;
        "onMenu.opened"?: (event: CustomEvent<Partial<BackDropOptions> | undefined>) => void;
        "onMenu.resized"?: (event: CustomEvent<string>) => void;
        "onMenu.resizing"?: (event: CustomEvent<[string, number]>) => void;
        "onMenu.resizing.start"?: (event: CustomEvent<string>) => void;
    }
    interface SimpleLink {
        "label"?: string;
        "link"?: string;
        "onState.pushed"?: (event: CustomEvent<{ state: any; title: string; url?: string | URL | null; }>) => void;
        "state"?: Object;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "character-selection": CharacterSelection;
        "console-welcome": ConsoleWelcome;
        "gui-404": Gui404;
        "gui-welcome": GuiWelcome;
        "logo-text": LogoText;
        "modal-backdrop": ModalBackdrop;
        "page-not-found": PageNotFound;
        "right-panel": RightPanel;
        "simple-link": SimpleLink;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "character-selection": LocalJSX.CharacterSelection & JSXBase.HTMLAttributes<HTMLCharacterSelectionElement>;
            "console-welcome": LocalJSX.ConsoleWelcome & JSXBase.HTMLAttributes<HTMLConsoleWelcomeElement>;
            "gui-404": LocalJSX.Gui404 & JSXBase.HTMLAttributes<HTMLGui404Element>;
            "gui-welcome": LocalJSX.GuiWelcome & JSXBase.HTMLAttributes<HTMLGuiWelcomeElement>;
            "logo-text": LocalJSX.LogoText & JSXBase.HTMLAttributes<HTMLLogoTextElement>;
            "modal-backdrop": LocalJSX.ModalBackdrop & JSXBase.HTMLAttributes<HTMLModalBackdropElement>;
            "page-not-found": LocalJSX.PageNotFound & JSXBase.HTMLAttributes<HTMLPageNotFoundElement>;
            "right-panel": LocalJSX.RightPanel & JSXBase.HTMLAttributes<HTMLRightPanelElement>;
            "simple-link": LocalJSX.SimpleLink & JSXBase.HTMLAttributes<HTMLSimpleLinkElement>;
        }
    }
}
